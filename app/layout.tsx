import type { Metadata } from "next";
import Header from '../components/header';
import { Geist, Geist_Mono } from "next/font/google";
import Script from "next/script";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        {/* 
          Загружаем model-viewer как модуль. 
          strategy:
            - "beforeInteractive" если нужно, чтобы web-компонент был объявлен до гидратации
            - "afterInteractive" если достаточно загрузки сразу после того, как React отрендерился
        */}
        <Script
          src="https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js"
          strategy="beforeInteractive"
          type="module"  
        />
        <Script
          id="init-auth"
          strategy="beforeInteractive"
          dangerouslySetInnerHTML={{
            __html: `
              (function() {
                try {
                  window.__IS_LOGGED_IN__ = !!localStorage.getItem('token');
                } catch(e) {
                  window.__IS_LOGGED_IN__ = false;
                }
              })();
            `,
          }}
        />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <Header />
        <main>{children}</main>
      </body>
    </html>
  );
}